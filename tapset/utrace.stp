/* utrace-only subset of register accessors */

%{
#include "syscall.h"
%}

function _utrace_syscall_nr:long () %{		/* pure */ /* myproc-unprivileged */
    if (! CONTEXT->uregs
        || ! (CONTEXT->probe_flags & _STP_PROBE_STATE_USER_MODE)) {
       CONTEXT->last_error = "invalid call without context registers";
    } else {
       THIS->__retvalue = syscall_get_nr(current, CONTEXT->uregs);
    }
%}

function _utrace_syscall_arg:long (n:long) %{	/* pure */ /* myproc-unprivileged */
    unsigned long arg = 0;
    if (! CONTEXT->uregs
        || ! (CONTEXT->probe_flags & _STP_PROBE_STATE_USER_MODE)) {
       CONTEXT->last_error = "invalid call without context registers";
    } else {
       syscall_get_arguments(current, CONTEXT->uregs, (int)THIS->n, 1, &arg);
    }
    THIS->__retvalue = arg;
%}

function _utrace_syscall_return:long () %{	/* pure */ /* myproc-unprivileged */
    /*
     * Here's the reason for the "unsigned long" cast.  Since all
     * values inside systemtap are 64-bit numbers, return values were
     * getting sign extended.  This caused return values to not match
     * up with the same values passes as arguments.
     */
    if (! CONTEXT->uregs
        || ! (CONTEXT->probe_flags & _STP_PROBE_STATE_USER_MODE)) {
       CONTEXT->last_error = "invalid call without context registers";
    } else {
       THIS->__retvalue = (unsigned long)syscall_get_return_value(current,
							       CONTEXT->uregs);
    }
%}
