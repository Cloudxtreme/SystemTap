# setresgid16 ________________________________________________
#
# long sys_setresgid16(old_gid_t rgid,
#		     old_gid_t egid,
#		     old_gid_t sgid)
#

@define _SYSCALL_SETRESGID16_NAME
%(
	name = "setresgid"
%)

@define _SYSCALL_SETRESGID16_ARGSTR
%(
	argstr = sprintf("%d, %d, %d", rgid, egid, sgid)
%)

probe syscall.setresgid16 = dw_syscall.setresgid16 !, nd_syscall.setresgid16 ? {}
probe syscall.setresgid16.return = dw_syscall.setresgid16.return !,
                                   nd_syscall.setresgid16.return ? {}

# dw_setresgid16 _____________________________________________________

probe dw_syscall.setresgid16 = kernel.function("sys_setresgid16").call ?
{
	@_SYSCALL_SETRESGID16_NAME
	rgid = __short($rgid)
	egid = __short($egid)
	sgid = __short($sgid)
	@_SYSCALL_SETRESGID16_ARGSTR
}
probe dw_syscall.setresgid16.return = kernel.function("sys_setresgid16").return ?
{
	@_SYSCALL_SETRESGID16_NAME
	retstr = return_str(1, $return)
}

# nd_setresgid16 _____________________________________________________

probe nd_syscall.setresgid16 = kprobe.function("sys_setresgid16") ?
{
	@_SYSCALL_SETRESGID16_NAME
	asmlinkage()
	rgid = __short(uint_arg(1))
	egid = __short(uint_arg(2))
	sgid = __short(uint_arg(3))
	@_SYSCALL_SETRESGID16_ARGSTR
}
probe nd_syscall.setresgid16.return = kprobe.function("sys_setresgid16").return ?
{
	@_SYSCALL_SETRESGID16_NAME
	retstr = returnstr(1)
}
