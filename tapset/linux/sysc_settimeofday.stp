# settimeofday _______________________________________________
#
# long sys_settimeofday(struct timeval __user *tv,
#			struct timezone __user *tz)
#

@define _SYSCALL_SETTIMEOFDAY_NAME
%(
	name = "settimeofday"
%)

@define _SYSCALL_SETTIMEOFDAY_ARGSTR
%(
	argstr = sprintf("%s, %s", tv_str, tz_str)
%)

probe syscall.settimeofday = dw_syscall.settimeofday !,
                             nd_syscall.settimeofday {}
probe syscall.settimeofday.return = dw_syscall.settimeofday.return !,
                                    nd_syscall.settimeofday.return {}

# dw_settimeofday _____________________________________________________

probe dw_syscall.settimeofday = kernel.function("sys_settimeofday").call
{
	@_SYSCALL_SETTIMEOFDAY_NAME
	tv_uaddr = $tv
	tv_str = _struct_timeval_u(tv_uaddr, 1)
	tz_uaddr = $tz
	tz_str = _struct_timezone_u(tz_uaddr)
	@_SYSCALL_SETTIMEOFDAY_ARGSTR
}
probe dw_syscall.settimeofday.return = kernel.function("sys_settimeofday").return
{
	@_SYSCALL_SETTIMEOFDAY_NAME
	retstr = return_str(1, $return)
}

# nd_settimeofday _____________________________________________________

probe nd_syscall.settimeofday = kprobe.function("sys_settimeofday") ?
{
	@_SYSCALL_SETTIMEOFDAY_NAME
	asmlinkage()
	tv_uaddr = pointer_arg(1)
	tv_str = _struct_timeval_u(tv_uaddr, 1)
	tz_uaddr = pointer_arg(2)
	tz_str = _struct_timezone_u(tz_uaddr)
	@_SYSCALL_SETTIMEOFDAY_ARGSTR
}
probe nd_syscall.settimeofday.return = kprobe.function("sys_settimeofday").return ?
{
	@_SYSCALL_SETTIMEOFDAY_NAME
	retstr = returnstr(1)
}
