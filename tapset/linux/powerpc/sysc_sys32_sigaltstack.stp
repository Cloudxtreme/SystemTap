%( CONFIG_GENERIC_SIGALTSTACK == "n" || kernel_v < "3.8" %?
# sys32_sigaltstack ________________________________________
#
# int compat_sys_sigaltstack(u32 __new, u32 __old, int r5,
#		             int r6, int r7, int r8, struct pt_regs *regs)
# int sys32_sigaltstack(u32 __new, u32 __old, int r5,
#			int r6, int r7, int r8, struct pt_regs *regs)
#

@define _SYSCALL_SYS32_SIGALTSTACK_NAME
%(
	name = "sigaltstack"
%)

@define _SYSCALL_SYS32_SIGALTSTACK_ARGSTR
%(
	argstr = sprintf("%s, %p", uss_str, uoss_uaddr)
%)

probe syscall.sys32_sigaltstack = dw_syscall.sys32_sigaltstack !,
                                  nd_syscall.sys32_sigaltstack ? {}
probe syscall.sys32_sigaltstack.return = dw_syscall.sys32_sigaltstack.return !,
                                         nd_syscall.sys32_sigaltstack.return ? {}

# dw_sys32_sigaltstack _____________________________________________________

probe dw_syscall.sys32_sigaltstack =
	kernel.function("compat_sys_sigaltstack").call !,
	kernel.function("sys32_sigaltstack").call ?
{
	@_SYSCALL_SYS32_SIGALTSTACK_NAME
	uss_uaddr = @__pointer($__new)
	uss_str = _stp_compat_sigaltstack_u(uss_uaddr)
	uoss_uaddr = @__pointer($__old)
	@_SYSCALL_SYS32_SIGALTSTACK_ARGSTR
}
probe dw_syscall.sys32_sigaltstack.return =
	kernel.function("compat_sys_sigaltstack").return !,
	kernel.function("sys32_sigaltstack").return ?
{
	@_SYSCALL_SYS32_SIGALTSTACK_NAME
	retstr = return_str(1, $return)
}

# nd_sys32_sigaltstack _____________________________________________________

probe nd_syscall.sys32_sigaltstack =
	kprobe.function("compat_sys_sigaltstack") !,
	kprobe.function("sys32_sigaltstack") ?
{
	@_SYSCALL_SYS32_SIGALTSTACK_NAME
	uss_uaddr = pointer_arg(1)
	uss_str = _stp_compat_sigaltstack_u(uss_uaddr)
	uoss_uaddr = pointer_arg(2)
	@_SYSCALL_SYS32_SIGALTSTACK_ARGSTR
}
probe nd_syscall.sys32_sigaltstack.return =
	kprobe.function("compat_sys_sigaltstack").return !,
	kprobe.function("sys32_sigaltstack").return ?
{
	@_SYSCALL_SYS32_SIGALTSTACK_NAME
	retstr = returnstr(1)
}
%)
