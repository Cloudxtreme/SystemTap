# setregid ___________________________________________________
# long sys_setregid(gid_t rgid, gid_t egid)
#

@define _SYSCALL_SETREGID_NAME
%(
	name = "setregid"
%)

@define _SYSCALL_SETREGID_ARGSTR
%(
	argstr = sprintf("%d, %d", rgid, egid)
%)

probe syscall.setregid = dw_syscall.setregid !, nd_syscall.setregid ? {}
probe syscall.setregid.return = dw_syscall.setregid.return !,
                                nd_syscall.setregid.return ? {}

# dw_setregid _____________________________________________________

probe dw_syscall.setregid = kernel.function("sys_setregid").call
{
	@_SYSCALL_SETREGID_NAME
	rgid = __int32($rgid)
	egid = __int32($egid)
	@_SYSCALL_SETREGID_ARGSTR
}
probe dw_syscall.setregid.return = kernel.function("sys_setregid").return
{
	@_SYSCALL_SETREGID_NAME
	retstr = return_str(1, $return)
}

# nd_setregid _____________________________________________________

probe nd_syscall.setregid = kprobe.function("sys_setregid") ?
{
	@_SYSCALL_SETREGID_NAME
	asmlinkage()
	rgid = __int32(uint_arg(1))
	egid = __int32(uint_arg(2))
	@_SYSCALL_SETREGID_ARGSTR
}
probe nd_syscall.setregid.return = kprobe.function("sys_setregid").return ?
{
	@_SYSCALL_SETREGID_NAME
	retstr = returnstr(1)
}
