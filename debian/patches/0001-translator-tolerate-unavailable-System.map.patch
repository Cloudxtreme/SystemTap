From f123a0f1ba27aee8d7458d944bdbbdd5010b90bb Mon Sep 17 00:00:00 2001
From: Frank Ch. Eigler <fche@redhat.com>
Date: Tue, 19 Feb 2013 21:00:04 -0500
Subject: [PATCH] translator: tolerate unavailable System.map

On some linux distros, the System.map file is unreadable to unprivileged
users.  systemtap should not overreact to this and assume that the whole
kernel-devel/header world is uninstalled.  Just print a warning and move on.

* session.cxx (systemtap_session::parse_kernel_functions): Tolerate missing
  info.
---
 session.cxx |   16 +++++++---------
 1 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/session.cxx b/session.cxx
index 30c50e2..ecb016a 100644
--- a/session.cxx
+++ b/session.cxx
@@ -1568,24 +1568,23 @@ systemtap_session::parse_kernel_functions ()
   system_map.open(system_map_path.c_str(), ifstream::in);
   if (! system_map.is_open())
     {
-      string error1 = _F("Checking \"%s\" failed with error: %s\nEnsure kernel development headers & makefiles are installed",
-                         system_map_path.c_str(), strerror(errno));
+      if (verbose > 1)
+	clog << _F("Kernel symbol table %s unavailable, (%s)",
+		   system_map_path.c_str(), strerror(errno)) << endl;
 
       string system_map_path2 = "/boot/System.map-" + kernel_release;
-
       system_map.clear();
       system_map.open(system_map_path2.c_str(), ifstream::in);
       if (! system_map.is_open())
         {
-          clog << error1 << endl;
-          clog << _F("Checking \"%s\" failed with error: %s",
-                     system_map_path2.c_str(), strerror(errno)) << endl;
-          return 1;
+	  if (verbose > 1)
+	    clog << _F("Kernel symbol table %s unavailable, (%s)",
+		       system_map_path2.c_str(), strerror(errno)) << endl;
         }
     }
 
   string address, type, name;
-  do
+  while (system_map.good())
     {
       system_map >> address >> type >> name;
 
@@ -1609,7 +1608,6 @@ systemtap_session::parse_kernel_functions ()
       // - what about __kprobes_text_start/__kprobes_text_end?
       kernel_functions.insert(name);
     }
-  while (! system_map.eof());
   system_map.close();
   return 0;
 }
-- 
1.7.2.5

