# Test the private keyword feature

set test "private"

# Setup
file mkdir "$test"
file copy "$srcdir/$subdir/${test}.stp" "$test"
cd "$test"

foreach runtime [get_runtime_list] {
    if {$runtime == ""} {set runtime kernel}

    # Subtest
    set subtest "$test private-variable-basic"
    set __counter 0
    eval spawn "stap --runtime=$runtime -I . -e {probe oneshot \{println(gtest1_getter(), \",\", gtest2_getter())\}}"
    expect {
        -timeout 160
        -re {^3,7\r\n} {
            incr __counter
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}

    # Subtest
    set subtest "$test private-variable-illegal-access"
    set __counter 0
    eval spawn "stap --runtime=$runtime -I . -e {probe oneshot \{println(gtest1)\}}"
    expect {
        -timeout 160
        -re {semantic error: unresolved type : identifier 'gtest1'} {
            incr __counter
            exp_continue
        }
        -re {^[^\r\n]+\r\n} {
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}


    # Subtest
    set subtest "$test private-function-basic"
    set __counter 0
    eval spawn "stap --runtime=$runtime -I . -e {probe oneshot \{println(getthree())\}}"
    expect {
        -timeout 160
        -re {^3\r\n} {
            incr __counter
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}

    # Subtest
    set subtest "$test private-function-illegal-access"
    set __counter 0
    eval spawn "stap --runtime=$runtime -I . -e {probe oneshot \{println(three())\}}"
    expect {
        -timeout 160
        -re {semantic error: unresolved function[^\r\n]+identifier 'three' at} {
            incr __counter
            exp_continue
        }
        -re {^[^\r\n]+\r\n} {
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}

    # Subtest
    set subtest "$test global-variable-access"
    set __counter 0
    eval spawn "stap --runtime=$runtime -I . -e {probe oneshot \{println(myglobal)\}}"
    expect {
        -timeout 160
        -re {^11\r\n} {
            incr __counter
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}

    # Subtest
    set subtest "$test global-variable-access-override"
    set __counter 0
    eval spawn "stap --runtime=$runtime -G myglobal=12 -I . -e {probe oneshot \{println(myglobal)\}}"
    expect {
        -timeout 160
        -re {^12\r\n} {
            incr __counter
            exp_continue
        }
        timeout {fail "$subtest (timeout)"}
    }
    catch {close}; catch {wait}
    if {$__counter == 1} {pass $subtest} else {fail $subtest}
}

# Cleanup
cd ..
file delete -force "$test"
