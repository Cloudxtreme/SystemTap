# test for checking monotonic timer (PR3916)
set test "gtod"
if {![installtest_p]} { untested $test; continue }

set compile_wd [pwd]
if [is_remote [target_info name]] {
    set wd "~"
} else {
    set wd [pwd]
}
set filename "$srcdir/$subdir/gtod.c"

target_compile $filename $compile_wd/gtod executable ""
if [is_remote [target_info name]] {
    remote_download target $compile_wd/gtod $wd/gtod
}

# non interval (check timer drift in short range)
eval spawn $srcdir/$subdir/gtod.sh [stap_get_board_args] $srcdir/$subdir/gtod.stp -c $wd/gtod
set ok 0
expect {
	-timeout 120
	-re {^[0-9]+ \:([0-9]+) appl\r\n[0-9]+ \:\1 kern\r\n[0-9]+ \:\1 prog\r\n} { incr ok; exp_continue }
	timeout { fail "$test (timeout)" }
	eof { }
}
wait
#10ms interval (check timer drift in middle range)
eval spawn $srcdir/$subdir/gtod.sh [stap_get_board_args] $srcdir/$subdir/gtod.stp -c $wd/gtod 10000
expect {
	-timeout 120
	-re {^[0-9]+ \:([0-9]+) appl\r\n[0-9]+ \:\1 kern\r\n[0-9]+ \:\1 prog\r\n} { incr ok; exp_continue }
	timeout { fail "$test (timeout)" }
	eof { }
}
wait
#100ms interval (calm down processors and CPU freq might be changed)
eval spawn $srcdir/$subdir/gtod.sh [stap_get_board_args] $srcdir/$subdir/gtod.stp -c $wd/gtod 100000
expect {
	-timeout 120
	-re {^[0-9]+ \:([0-9]+) appl\r\n[0-9]+ \:\1 kern\r\n[0-9]+ \:\1 prog\r\n} { incr ok; exp_continue }
	timeout { fail "$test (timeout)" }
	eof { }
}
wait
exec rm -f $compile_wd/gtod
if [is_remote [target_info name]] {
    remote_exec target "rm -f $wd/gtod"
}
if {$ok == 300} { pass "$test ($ok)" } { fail "$test ($ok)" }

