set test "control_limits MAXNESTING"
if {![installtest_p]} { untested $test; return }

eval spawn stap [stap_get_board_args] -u -DMAXNESTING=5 $srcdir/$subdir/control_limits.stp
set ok 0
expect {
    -timeout 150
    -re {ERROR.*MAXNESTING} { incr ok; exp_continue }
    timeout { fail "$test (timeout)" }
    eof { }
}
catch {close}; catch {wait}
if {$ok == 1} { pass "$test ($ok)" } { fail "$test ($ok)" }

set test "control_limits MAXACTION"
eval spawn stap [stap_get_board_args] -u -DMAXACTION_INTERRUPTIBLE=500 $srcdir/$subdir/control_limits.stp
set ok 0
expect {
    -timeout 150
    -re {ERROR.*MAXACTION} { incr ok; exp_continue }
    timeout { fail "$test (timeout)" }
    eof { }
}
catch {close}; catch {wait}
if {$ok == 1} { pass "$test ($ok)" } { fail "$test ($ok)" }

set test "control_limits MAXSTRINGLEN small"
eval spawn stap [stap_get_board_args]  -u -DMAXSTRINGLEN=50 $srcdir/$subdir/control_limits.stp
set ok 0
expect {
    -timeout 150
    -re {ERROR.*MAXSTRINGLEN reduced} { incr ok; exp_continue }
    timeout { fail "$test (timeout)" }
    eof { }
}
catch {close}; catch {wait}
if {$ok == 1} { pass "$test ($ok)" } { fail "$test ($ok)" }

set test "control_limits MAXSTRINGLEN large"
eval spawn stap [stap_get_board_args] -u -DMAXSTRINGLEN=500 $srcdir/$subdir/control_limits.stp
set ok 0
expect {
    -timeout 150
    -re {ERROR.*MAXSTRINGLEN enlarged} { incr ok; exp_continue }
    timeout { fail "$test (timeout)" }
    eof { }
}
catch {close}; catch {wait}
if {$ok == 1} { pass "$test ($ok)" } { fail "$test ($ok)" }

