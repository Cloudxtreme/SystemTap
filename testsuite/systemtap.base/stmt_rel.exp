set test "stmt_rel"

set line1 ""
eval spawn stap [stap_get_board_args] -l {"kernel.statement(\"bio_init@fs/bio.c+2\")"}
expect {
    -timeout 180
    -re {bio\.c:[0-9][0-9][0-9]} { regexp "\[0-9\]\[0-9\]\[0-9\]" $expect_out(0,string) line1; }
    timeout { fail "$test C (timeout)" }
    eof { }
}
catch {close}; catch {wait}

set line2 ""
eval spawn stap [stap_get_board_args] -l {"kernel.statement(\"bio_init@fs/bio.c+3\")"}
expect {
    -timeout 180
    -re {bio\.c:[0-9][0-9][0-9]} { regexp "\[0-9\]\[0-9\]\[0-9\]" $expect_out(0,string) line2; }
    timeout { fail "$test C (timeout)" }
    eof { }
}
catch {close}; catch {wait}

if { $line1 < $line2 } {
    pass "$test line numbers"
} else {
    fail "$test line numbers"
}

set ok 0
eval spawn stap [stap_get_board_args] -l {"kernel.statement(\"bio_init@fs/bio.c:*\")"}
expect {
    -timeout 180
    -re {[0-9][0-9][0-9]} { incr ok; exp_continue }
    timeout { fail "$test C (timeout)" }
    eof { }
}
catch {close}; catch {wait}

# bio_init drifts a bit in different kernels. 
# maybe 3, 4 or 15 lines in it.
if { $ok >= 3 } {
    pass "$test wildcard"
} else {
    fail "$test wildcard ($ok)"
}

# Compile with inlining and check we can set a relative statement there
set ok 0
set rel_flags "additional_flags=-Wall additional_flags=-Werror"
set rel_flags "$rel_flags additional_flags=-Winline"
set rel_flags "$rel_flags additional_flags=-O3 additional_flags=-g"
set res [target_compile $srcdir/$subdir/stmt_rel.c [pwd]/stmt_rel.x executable $rel_flags]
if { $res != "" } {
    verbose "target_compile failed: $res" 2
    fail "$test compiling stmt_rel"
    cleanup_handler $verbose
    return
} else {
    pass "$test compiling stmt_rel"
}

spawn stap -c ./stmt_rel.x -e "probe process(\"./stmt_rel.x\").statement(\"Move@stmt_rel.c+1\") {printf(\"Move %d\\n\",\$s1)}"
expect {
    -timeout 180
    -re {Move [0-9]} { incr ok; exp_continue }
    timeout { fail "$test stmt_rel (timeout)" }
    eof { }
}
catch {close}; catch {wait}

if { $ok == 8192 } {
    pass "$test stmt_rel"
} else {
    fail "$test stmt_rel ($ok)"
}
